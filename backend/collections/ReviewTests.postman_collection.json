{
	"info": {
		"_postman_id": "9ff21b95-8582-465f-96aa-f085efd852d0",
		"name": "Review Tests",
		"description": "Colección de pruebas sobre el recurso Review",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25917437"
	},
	"item": [
		{
			"name": "Crear una editorial",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"editorial_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Norma\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/editorials",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"editorials"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea una nueva editorial. El recurso solo tiene de atributo \"name\" que debe ser único. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crear un libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"book_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"Jorge Fondebrider traza un mundo fantastico con mapas de la geografia real y de sus mitologias, observando a los hombres lobo que han vivido en la imaginacion de Europa y America.\",\n    \"image\": \"https://static.iris.net.co/arcadia/upload/images/2017/7/31/64899_1.jpg\",\n    \"isbn\": \"930330149-8\",\n    \"editorial\": {\n        \"id\": {{editorial_id}}\n    },\n    \"name\": \"Historia de los hombres lobo 2\",\n    \"publishingDate\": \"2000-08-20T00:00:00-05:00\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/books",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nuevo libro. El ISBN del recurso debe ser único. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crearle una reseña a un libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"review_id_1\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"Un review nueva para el libro\",\n    \"name\": \"Mi nueva review\",\n    \"source\": \"Universidad de los Andes\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/books/{{book_id}}/reviews",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						"{{book_id}}",
						"reviews"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea una nueva reseña. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crearle una reseña 2 a un libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"review_id_2\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"Un resena antigua para el libro\",\n    \"name\": \"Mi antigua review\",\n    \"source\": \"Universidad de los Andes\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/books/{{book_id}}/reviews",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						"{{book_id}}",
						"reviews"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea una nueva reseña. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crearle una reseña a  un libro que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.apierror.message).to.eql(\"The book with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"Un resena antigua para el libro\",\n    \"name\": \"Mi antigua review\",\n    \"source\": \"Universidad de los Andes\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/books/0/reviews",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						"0",
						"reviews"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nueva nueva reseña pero con un libro que no existe. Verifica que se genera el error y el mensaje \"El recurso /books/0/reviews no existe\".\r\n\r\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Obtener las reseñas de un libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of reviews > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/books/{{book_id}}/reviews",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						"{{book_id}}",
						"reviews"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta las reseñas de un libro en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del libro a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener una reseña de un libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/books/{{book_id}}/reviews/{{review_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						"{{book_id}}",
						"reviews",
						"{{review_id_1}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta una reseña de un libro en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del libro y de la reseña a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Editarle una reseña a un libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Tiene ahora un nombre la review\",\n    \"source\": \"Se edita la fuente de la review\",\n    \"description\": \"Un review nueva para el libro\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/books/{{book_id}}/reviews/{{review_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						"{{book_id}}",
						"reviews",
						"{{review_id_1}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza una reseña a un libro existente. Se envían los Ids de las entidades asociar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Editarle una reseña que no existe a un libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.apierror.message).to.eql(\"The review with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Tiene ahora un nombre la review\",\n    \"source\": \"Se edita la fuente de la review\",\n    \"description\": \"Un review nueva para el libro\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/books/{{book_id}}/reviews/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						"{{book_id}}",
						"reviews",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nAsocia una reseña que no existe a un libro. \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /reviews/0 no existe.\".\r\n\r\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Editarle una reseña a un libro que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.apierror.message).to.eql(\"The book with the given id was not found\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Tiene ahora un nombre la review\",\n    \"source\": \"Se edita la fuente de la review\",\n    \"description\": \"Un review nueva para el libro\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/books/0/reviews/{{review_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						"0",
						"reviews",
						"{{review_id_1}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nAsocia una reseña a un libro que no existe.\r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /books/0 no existe.\".\r\n\r\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrarle una reseña que no existe en un libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.apierror.message).to.eql(\"The review with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/books/{{book_id}}/reviews/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						"{{book_id}}",
						"reviews",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra una reseña que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrarle una reseña un libro que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.apierror.message).to.eql(\"The book with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/books/0/reviews/{{review_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						"0",
						"reviews",
						"{{review_id_1}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra una reseña a un libro que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /books/0/reviews no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrarle una reseña a un libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/books/{{book_id}}/reviews/{{review_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						"{{book_id}}",
						"reviews",
						"{{review_id_1}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra una reseña asociada a un libro. Se envían los ids de la reseña y el libro creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrarle una reseña 2 a un libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/books/{{book_id}}/reviews/{{review_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						"{{book_id}}",
						"reviews",
						"{{review_id_2}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra una reseña asociada a un libro. Se envían los ids de la reseña y el libro creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/books/{{book_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"books",
						"{{book_id}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un libro. Se envía el id del libro creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar una editorial",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/editorials/{{editorial_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"editorials",
						"{{editorial_id}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra una editorial. Se envía el id de la editorial creada en la primera petición.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}