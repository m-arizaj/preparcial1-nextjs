{
	"info": {
		"_postman_id": "39948a67-fc5f-4193-a299-29cde42e7607",
		"name": "Author Tests",
		"description": "Colección de pruebas sobre el recurso Author",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25917437"
	},
	"item": [
		{
			"name": "Crear un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"author_id_1\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"birthDate\": \"1927-03-03T00:00:00-05:00\",\n    \"description\": \"fue un escritor, guionista, editor y periodista colombiano. En 1982 recibió el Premio Nobel de Literatura.\",\n    \"image\": \"https://commons.wikimedia.org/wiki/File:Gabriel_Garcia_Marquez.jpg\",\n    \"name\": \"Gabriel José de la Concordia García Márquez\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/authors",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authors"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nuevo autor. El Id es inicializado por la BD y se debe ver en la respuesta.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crear un autor 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"author_id_2\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"birthDate\": \"1966-07-22T00:00:00-05:00\",\n    \"description\": \"fue un escritor, guionista, editor y periodista colombiano..\",\n    \"image\": \"https://commons.wikimedia.org/wiki/File:Descargakoj.jpg\",\n    \"name\": \"Gustavo Bolivar Moreno\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/authors",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authors"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nuevo autor. El Id es inicializado por la BD y se debe ver en la respuesta.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener todos los autores",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of authors > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/authors",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authors"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta todos los autores de la aplicacion. \r\nLa petición no tiene cuerpo.\r\n\r\nPara la prueba, se verifica que el conjunto de autores en la respuesta tenga mas de uno.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/authors/{{author_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authors",
						"{{author_id_1}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un autor de la aplicación.  \r\nLa petición no tiene cuerpo.\r\nSe envía el id del autor deseado por la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un autor que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.apierror.message).to.eql(\"The author with the given id was not found\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/authors/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authors",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un autor que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /authors/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Editar un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"birthDate\": \"1927-03-03T00:00:00-05:00\",\n    \"description\": \"Fue un escritor, guionista, editor y periodista colombiano. En 1982 recibió el Premio Nobel de Literatura. Vivio gran parte de su vida en Mexico\",\n    \"image\": \"https://commons.wikimedia.org/wiki/File:Gabriel_Garcia_Marquez.jpg\",\n    \"name\": \"Gabriel José de la Concordia García Márquez\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/authors/{{author_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authors",
						"{{author_id_1}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza un autor existente. \r\nse envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Editar un autor que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.apierror.message).to.eql(\"The author with the given id was not found\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"birthDate\": \"1927-03-03T00:00:00-05:00\",\n    \"description\": \"Fue un escritor, guionista, editor y periodista colombiano. En 1982 recibió el Premio Nobel de Literatura. Vivio gran parte de su vida en Mexico\",\n    \"image\": \"https://commons.wikimedia.org/wiki/File:Gabriel_Garcia_Marquez.jpg\",\n    \"name\": \"Gabriel José de la Concordia García Márquez\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/authors/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authors",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\nActualiza un autor que no existe. \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /authors/0 no existe.\".\r\n\r\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/authors/{{author_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authors",
						"{{author_id_1}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un autor. Se envía el id del autor creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar el autor 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/authors/{{author_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authors",
						"{{author_id_2}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un autor. Se envía el id del autor creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un autor que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.apierror.message).to.eql(\"The author with the given id was not found\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseUrl}}/authors/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"authors",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra un autor que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /authors/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/api",
			"type": "string"
		}
	]
}